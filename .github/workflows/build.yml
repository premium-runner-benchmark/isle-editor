name: build

on: [push,workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:    
  test:  
    runs-on: ${{ matrix.runner_type }}
    strategy:
      matrix:
        #runner_type: [ds2v2e,d2asv4e,ds2v2,ds2v3,d2dsv4,d2asv4,m5large,n2s2,ds3v2,ds4v2,ds5v2,f4s,c2s4,c5xlarge,f8s,f16s,f32s,f64s,f2s,d4asv4] 
        runner_type: [ubuntu-latest]
    env:
      runId: ${{ matrix.runner_type }}-${{ github.workflow }}
      artifactsDir: artifacts/${{ github.repository }}
      iostatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-iostat.txt
      vmstatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-vmstat.txt
      timingFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-timing.txt
    
    steps:
      # Start collecting stats
      #- run: sudo apt -y install sysstat
      - run: mkdir -p ${{ runner.temp }}/${{ env.artifactsDir }}
      - run: iostat -yxmt 1 > ${{ runner.temp }}/${{ env.iostatFile }} &
      - run: vmstat -n 1 > ${{ runner.temp }}/${{ env.vmstatFile }} &
      - run: date -R > ${{ runner.temp }}/${{ env.timingFile }}
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: 10.x
      - name: npm install, lint, build, and test
        run: |
          npm ci
          npm run lint
          npm test
          npm run build
        env:
          CI: true

      # Collect/upload stats
      - run: date -R >> ${{ runner.temp }}/${{ env.timingFile }}
      - run: pkill iostat && pkill vmstat
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: perfdata
          path: ${{ runner.temp }}/${{ env.artifactsDir }}
          if-no-files-found: error

  process:
    name: Process Perf Data
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/runnerperf
          path: runnerperf
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/iostat-tool
          path: runnerperf/iostat-tool
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2  
        with:
          name: perfdata
          path: runnerperf/data
      - name: Prereqs
        run: sudo apt -y install datamash  
      - name: Process stats
        run: |
          cd runnerperf
          (cd iostat-tool && python setup.py develop)
          ls -l data
          script/dumpcsv.sh data output
          script/aggregate.sh output ${{ github.repository }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: summary-perfdata
          path: runnerperf/output/summary.csv
          if-no-files-found: error
